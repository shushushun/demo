openapi: 3.0.0

info:
  title: API for Task Management Application 
  version: 1.0.0


paths:
  # paths オブジェクト
  /users:
    # path item オブジェクト
    get: # GET
      # Operationオブジェクト
      tags:
        - users
      summary: Get all users.
      description: Returns an array of Employee model
      parameters: []
      responses: # レスポンス定義
        '200': # HTTP status
          description: A JSON array of Employee model
          content:
            application/json: # レスポンスの形式指定
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/Employee' # 参照するモデル
                example: # サンプルデータ
                  - user_id: 1
                    user_name: Alice
                    department: human resources
                  - id: 2
                    name: Bob
                    department: sales
    post: # POST
      tags: 
        - users
      summary: Create a new Employee
      description: Create a new User
      parameters: []
      requestBody: # リクエストボディ
        description: user to create
        content:
          application/json:
            schema: # POSTするオブジェクト
              $ref: '#/components/schemas/Employee'
            example:
              id: 3
              name: Chris
              department: Finance
      responses:
        '201':
          description: CREATED


  /tasks:
    # path item オブジェクト
    get: # GET
      # Operationオブジェクト
      tags:
        - tasks
      summary: Get all tasks.
      description: Returns an array of Task model
      parameters: []
      responses: # レスポンス定義
        '200': # HTTP status
          description: A JSON array of Task model
          content:
            application/json: # レスポンスの形式指定
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/Task' # 参照するモデル
                example: # サンプルデータ
                  - task_id: 1
                    user_id: 1
                    task_name: make slides
                    status: not yet
                    deadline: 2022-09-30
                  - task_id: 2
                    user_id: 1
                    task_name: send files
                    status: not yet
                    deadline: 2022-09-30
    post: # POST
      tags: 
        - tasks
      summary: Create a new Task
      description: Create a new Task
      parameters: []
      requestBody: # リクエストボディ
        description: task to create
        content:
          application/json:
            schema: # POSTするオブジェクト
              $ref: '#/components/schemas/Task'
            example:
              task_id: 3
              user_id: 1
              task_name: send file
              status: new
              deadline: 2022-12-1
      responses:
        '201':
          description: CREATED
          
  /tasks/{userId}:
    get:
      tags:
        - taskSummary
      summary: Get tasks by user ID.
      description: Returns a single TaskSummary
      parameters: # リクエストパラメータ
        - name: userId
          in: path # パラメータをパス内に含める
          description: user id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A single TaskSummary model
          content:
            application/json:
              schema: 
                type: object
                items:
                  $ref: '#/components/schemas/TaskSummary'
                example:
                  user_name: Alice
                  department: human resources
                  task_name: make slides
                  status: not yet
                  deadline: 2022-9-30
                  
                  
components:
  schemas: # スキーマオブジェクトの定義
    Employee: # モデル名
      type: object # 型
      required: # 必須フィールド
        - user_id
        - user_name
        - department
      properties:
        user_id: # プロパティ名
          type: integer # 型 
          format: int64 # フォーマット(int32, int64等)
          example: 1
        user_name:
          type: string
          example: John Smith
        department:
          type: string
          example: Human Resource

    Task:
      type: object
      required:
        - task_id
        - task_name
        - status
        - deadline
      properties:
        task_id:
          type: integer
          format: int64
          example : 1
        task_name:
          type: string
          example: make slides
        status:
          type: string
          example: not yet
        deadline:
          type: string
          example: 2022-06-16
          
          
    
    TaskSummary:
      type: object
      required:
        - user_name
        - department
        - task_name
        - status
        - deadline
      properties:
        user_name:
          type: string
          example : John Smith
        department: 
          type: string
          example: human resources
        task_name:
          type: string
          example: make slides
        status:
          type: string
          example: not yet
        deadline:
          type: string
          example: 2022-06-16
          
